clear, clc, close all

addpath f/
addpath ../f/
addpath ../ofdm/
addpath ../ofdm/f/
addpath ../apd/

%% DAC
Tx.DAC.fs = 2687.5*32*1e6; % DAC sampling rate
Tx.DAC.ros = 4; % oversampling ratio of transmitter DSP
Tx.DAC.resolution = 8; % DAC effective resolution in bits
% Tx.DAC.filt = design_filter('butter', 3, 20e9/(sim.fs/2)); % DAC analog frequency response

ofdm_ros = 2;
sim.M = 4;
Ncp = 10;
Nc = 256;
Nu = 208;
fs_ofdm = Tx.DAC.fs/ofdm_ros;
sim.Rb = fs_ofdm*log2(sim.M)*Nu/(2*(Nc+Ncp)); % bit rate in bits/sec

sim.Nsymb = 59; % Number of symbols in montecarlo simulation
sim.ros.txDSP = Tx.DAC.ros; 
sim.Mct = 1;      % Oversampling ratio to simulate continuous time. Must be integer multiple of sim.ros.txDSP and numerator of sim.ros.rxDSP
sim.BERtarget = 1.8e-4;

%% OFDM 
% OFDM constructor: ofdm(Nc, Nu, CS, Rb)
% Nc : number of subcarriers
% Nu : number of used subcarriers
% CS : nominal constellation size
% Rb : bit rate (b/s)
ofdm = ofdm(Nc, Nu, sim.M, sim.Rb, 'preemphasis'); 
ofdm.set_cyclic_prefix(Ncp/2, Ncp/2);

%% Time and frequency
% sim.N = sim.ros.txDSP/ofdm_ros*(ofdm.Nc + ofdm.Npre_os)*sim.Nsymb;           % total number of points simulated in continuous time
% sim.fs = ofdm.fs*sim.ros.txDSP;
% 
% [sim.f, sim.t] = freq_time(sim.N, sim.fs);

%% DAC
Tx.DAC.fs = 2687.5*32*1e6; % DAC sampling rate
Tx.DAC.ros = sim.ros.txDSP; % oversampling ratio of transmitter DSP
Tx.DAC.resolution = Inf; % DAC efsizefective resolution in bits
% Tx.DAC.filt = design_filter('butter', 5, 15e9/(sim.fs/2)); % DAC analog frequency response

Rx.AdEq.mu = 1e-3;
Rx.AdEq.Ntrain = 512; % Number of symbols used in training (if Inf all symbols are used)

%% Power allocation 
% Preempahsis
% % Hch = [10.5864882880518 + 1.49339633027114i,11.3238467118264 + 2.29355276861050i,11.8028220951656 + 3.37356459582204i,13.4884741257329 + 3.63677048916425i,13.8125257362940 + 3.50051982479883i,13.7108104807211 + 3.14475434454464i,13.6823269310383 + 3.33005669871479i,13.6591133596389 + 3.64236012655727i,13.9083402129090 + 4.31318489958790i,14.6032354312678 + 4.64278766092578i,14.7137158938755 + 5.10339031625679i,14.9161365241344 + 5.02569983956845i,15.0321794414393 + 5.17597970109845i,15.2058060061400 + 5.51890356329717i,15.4751575820516 + 6.17912816014491i,16.4121110671244 + 5.80150044496576i,16.2092695729273 + 5.86866710993493i,16.0374607511962 + 6.02359622589820i,15.9960440158535 + 5.77986603040130i,16.4003177738899 + 6.80781545636365i,16.1283207029707 + 6.58652382831100i,16.2703165217003 + 7.76418653161224i,16.4153350667516 + 7.00027587991651i,16.2285703517086 + 7.34031352726578i,16.0456041118255 + 7.64721879901575i,16.2364537523500 + 7.92854260627997i,15.0560756738284 + 8.54039699475220i,15.7916013930922 + 9.83354652829034i,16.2862225373852 + 10.2496048923805i,15.9378338720865 + 9.68862498310304i,15.8392182120140 + 10.3065085651120i,15.4687840978332 + 11.2260403393048i,16.2521943357353 + 11.7900336370651i,15.3130481875047 + 11.9993845119805i,15.6184484002480 + 13.0894802593440i,16.4955475822428 + 12.7391251419048i,15.5283212279253 + 13.3986299477863i,15.0382660132645 + 14.2742457704250i,15.3204188014811 + 14.8938084050301i,15.8771641797003 + 16.0562638653255i,16.0846117867267 + 16.1590642414807i,16.1006517381670 + 16.8209813344538i,15.7119271011055 + 17.0101710644767i,15.8914005380683 + 17.8421380022481i,16.6439554932122 + 17.6306359703165i,16.0031158052876 + 18.8343349034433i,16.9685424684213 + 18.2047171786448i,15.6665047591979 + 19.8761700570909i,16.7618651812747 + 19.8139169799925i,17.1302305275286 + 19.2144002686916i,16.6258202709591 + 19.3636082497805i,17.2618016648411 + 20.2464593304543i,16.9584068515811 + 20.7049565645220i,16.4538438584459 + 21.2027698115726i,16.6448022906617 + 23.2870654042235i,17.4733847276435 + 22.0839423901553i,17.4987453461778 + 22.7823858398055i,17.5331257717277 + 23.8625098060840i,17.8001979478053 + 22.9815466330088i,16.4943777596186 + 22.4305711161379i,17.6781129276479 + 25.4773253724281i,18.1280812847945 + 24.6914111627959i,17.6830490186802 + 24.3845925905602i,17.0447856823188 + 26.1112252206631i,18.7168634714559 + 25.0743117458882i,18.1596637356808 + 24.0779441821512i,17.0844702552517 + 27.6726154135683i,19.2645921931017 + 26.8306160883738i,19.2822938793136 + 27.5895970295330i,17.7666571368893 + 29.1480426871921i,18.3571359533130 + 26.5337138067199i,18.5832436958300 + 26.8135157299208i,15.7693742724854 + 28.6764219290472i,15.7124493121909 + 30.9854870515438i,15.4780593196902 + 30.0157350993488i,15.8893419470191 + 30.4599295624008i,16.1004239815927 + 31.7369027450398i,15.8768502604975 + 30.7905418873020i,13.9703090547998 + 32.0742545359881i,14.4520355550102 + 32.8430726528383i,14.4884522126022 + 32.9421343309202i,12.2290758111782 + 32.0487761250664i,10.8875762392570 + 34.2225738819018i,9.43490354701796 + 34.0527683572984i,6.87373912680067 + 34.4104005302000i,8.97224433106973 + 36.2039643407443i,5.31482449375369 + 36.1037808041328i,2.65263324079681 + 37.2514680393148i,2.16861556692370 + 39.7930538492576i,-0.812006395366996 + 38.5718979409061i,-3.50230242117191 + 40.9516177055554i,-4.82950518849645 + 40.9330311033424i,-4.78603485556681 + 41.0012080704565i,-7.27161562673659 + 41.5260466733111i,-9.50686398862735 + 42.1846351920549i,-11.7995845853796 + 41.4772329446245i,-12.6617498321148 + 43.3379990804847i,-15.1214078516367 + 42.6332536282323i,-15.3079634985599 + 42.8232904163001i,-18.2310987898760 + 43.3659121822454i,-24.1136429669932 + 39.7203354739368i,-23.7221444671474 + 40.8033162931917i,-26.4940930570592 + 44.2185819529173i,-27.8416963990219 + 41.7152051470882i];
% Hch = [2.73106654609644,2.85886868536201,3.05822737511419,3.46038180074983,3.46708706170941,3.52598474992524,3.49189589012096,3.53495445473579,3.56093541169890,3.64674695636431,3.73077622298887,3.74192699778840,3.86218247812435,3.93338482249054,4.11196688035485,4.23513686587625,4.45635036574061,4.23804751095611,4.38253865161181,4.11587421825603,4.54688299115558,4.23160758186788,4.36085040842625,4.58151819020844,4.39460926144724,4.45301480552868,4.18241390111016,4.41195821039056,4.65168970424071,4.65613453610526,4.47319925903857,4.39361170709457,4.88490866627688,4.68748608946388,4.98656437279577,4.85419692124548,4.89934584002275,5.15029922367776,5.27758814988422,5.19879087309623,5.11233213367968,5.34096914696413,5.56288152056150,5.66127691865576,5.69480986718812,5.56712175308027,5.77085129300582,6.01632108613293,6.40878354306794,6.16351664937764,5.97142157589750,6.16366330915362,6.23454707061600,6.50979989914742,6.29496281549612,6.64072417193894,6.85327129463490,6.78132340776269,6.91636006446131,6.91804745819621,6.72148458789709,6.92314200726573,7.31867356138867,6.89890241991910,6.90792921169589,7.45329221563481,7.27205928983376,7.26808516047102,7.37357110132786,7.36147887386745,7.77250380906938,7.50653510639227,7.43003537861776,7.99143857756046,8.23350730195373,7.48900724723583,7.61197200921973,7.76987868810254,7.73481687912185,8.00322335844356,8.32122975621097,7.96270686018318,8.09401309376292,7.70464749600986,8.25324900800601,7.79099653221476,8.02460792223691,8.75837648136676,8.51545264105654,8.34256683150353,8.02450702511843,8.82745603936225,9.11317533655492,8.65064935916800,8.64318196573915,9.15526799073268,9.44123229287533,9.22717184975231,9.30919408529858,9.54258826736348,10.3517858244214,9.74454768036903,9.76826355234945,11.0196055277993];
% 
% Hpreemph = 10.^(polyval([-0.0013 0.5846 1.5859], ofdm.fc/1e9)/20);
% % PIN 
% PIN = pin(1, 1e-9);
% varShot = 4*PIN.varShot(dBm2Watt(10), ofdm.fs/2); % shot noise is dominant in coherent receiver  
% ofdm.power_allocation(1./Hpreemph, varShot*ones(size(ofdm.fc))/ofdm.Nc, sim.BERtarget, true);

% No power allocation
ofdm.power_allocation(ones(size(ofdm.fc)), ones(size(ofdm.fc)), sim.BERtarget, true);

[xd, Rx.AdEq.trainSeq] = ofdm.signal(sim.Nsymb); 

Xn = ofdm.detect(xd, Rx.AdEq, true);

figure, plot(ofdm.fc/1e9, abs(Xn).^2)

%% Upsample to DAC sampling rate
xd = resample(xd, ofdm_ros, 1);

%% Zero pad
Nxd = length(xd);
Npad = 2^(ceil(log2(Nxd)))-Nxd;
xdpad = [zeros(1, floor(Npad/2)) xd zeros(1, ceil(Npad/2))];

%% Quantization 
xk = xdpad;
xk = xk/sqrt(mean(abs(xk).^2));
xmin = min(xk);
xmax = max(xk);
enob = 8;
Vswing = 1.2;
xamp = xmax - xmin;    
dx = xamp/(2^(enob)-1);  
sig_range = xmin:dx:xmax;
partition = sig_range(1:end-1) + dx/2;
[~, xq, varQ] = quantiz(Vswing*xk, partition, 0:255); 

figure, plot(xq)
title('DAC signal')

% Save files
if strcmpi(ofdm.powerAllocationType, 'none')
    file = sprintf('data/waveforms/dmt_%dqam_ros=%d_waveform_%d', ofdm.CS, ofdm_ros, sim.Nsymb)
else
    file = sprintf('data/waveforms/dmt_%dqam_ros=%d_waveform_%d_preemph', ofdm.CS, ofdm_ros, sim.Nsymb)
end

% save_waveform(xq, [file '.txt']);
save(file);

